---
export const prerender = false;
import ProductCard from "@/components/product-card.astro";
import CarouselContainer from "@/components/slider/carousel-container.astro";
import CarouselItem from "@/components/slider/carousel-item.astro";
import CarouselNext from "@/components/slider/carousel-next.astro";
import CarouselPrevious from "@/components/slider/carousel-previous.astro";
import Carousel from "@/components/slider/carousel.astro";
import Main from "@/layouts/main.astro";
import {
  CATEGORY_COLLECTION,
  IMAGE_COLLECTION,
  pb,
  PRODUCT_COLLECTION,
} from "@/lib/pocketbase";
import { convertImageUrl } from "@/lib/utils";
import { Image } from "astro:assets";

async function fetchBanners() {
  try {
    const response = await pb.collection(IMAGE_COLLECTION).getList(1, 5, {
      filter: `type="banner"`,
    });

    return { data: response, error: null };
  } catch (error) {
    return { data: null, error: error };
  }
}

const { data: banners } = await fetchBanners();

const images = banners?.items?.map((item) => ({
  ctaUrl: item?.href,
  imgSrc: convertImageUrl(item),
}));

async function fetchProductGroupByCategory() {
  try {
    const data = await pb.collection(CATEGORY_COLLECTION).getList(1, 5);

    for (const item of data.items) {
      const products = await pb.collection(PRODUCT_COLLECTION).getList(1, 5, {
        filter: `category = "${item?.id}"`,
        expand: "thumbnail",
      });
      item.products = products.items;
    }
    return data;
  } catch (error) {
    return null;
  }
}

async function fetchLatestProducts() {
  try {
    const data = await pb.collection(PRODUCT_COLLECTION).getList(1, 4, {
      sort: "-created",
      expand: "thumbnail",
    });
    return data;
  } catch (error) {
    return null;
  }
}

const categories = await fetchProductGroupByCategory();
const latestProducts = await fetchLatestProducts();
---

<Main title="Trang chủ">
  <Carousel
    options={{ loop: false, align: "start", containScroll: "trimSnaps" }}
  >
    <CarouselContainer>
      {
        images?.map((item: any) => (
          <CarouselItem>
            <a href={item?.ctaUrl}>
              <Image
                class="h-[calc(100vh-80px)] object-cover w-full"
                height={100}
                width={100}
                src={item?.imgSrc ?? ""}
                alt="slide"
                loading="eager"
              />
            </a>
          </CarouselItem>
        ))
      }
    </CarouselContainer>
    <CarouselNext slot="next" />
    <CarouselPrevious slot="previous" />
  </Carousel>
  <section
    class="mt-16 max-w-6xl mx-auto"
    x-data=`{tabs: ${JSON.stringify(categories?.items)}, tab: 0}`
  >
    <div class="mb-6">
      <h3 class="text-xl font-bold">Danh mục</h3>
    </div>
    <div class="flex lg:gap-6 gap-2 overflow-auto">
      <template x-for="(value, index) in tabs">
        <div>
          <button
            x-on:click="tab = index"
            x-text="value.name"
            type="button"
            :class="tab == index ? 'bg-blue-500 text-white font-bold hover:bg-blue-600' : 'bg-gray-50 text-black hover:bg-gray-100'"
            class="w-max text-sm transition-all duration-150 cursor-pointer rounded-full px-4 py-2"
          ></button>
        </div>
      </template>
    </div>
    {
      categories?.items?.map((item, index) => (
        <div x-show={`tab == ${index}`} class="w-full">
          <div class="grid grid-cols-2 md:grid-cols-4 md:gap-6 gap-2 mt-6">
            {item?.products?.map((product: any) => (
              <ProductCard
                data={{
                  id: product?.id,
                  name: product?.name,
                  price: product?.price,
                  discount: product?.discount,
                  slug: product?.slug,
                  thumbnail: convertImageUrl(product?.expand?.thumbnail),
                }}
              >
                <Image
                  slot="image"
                  width={100}
                  height={100}
                  src={convertImageUrl(product?.expand?.thumbnail) ?? "/"}
                  loading="lazy"
                  alt={product?.name ?? "product_image"}
                  class="aspect-square w-full bg-gray-200 object-cover group-hover:scale-105 xl:aspect-1/1 transition-all duration-300 ease-in-out"
                />
              </ProductCard>
            ))}
          </div>
        </div>
      ))
    }
  </section>
  <section class="mt-16 max-w-6xl mx-auto">
    <div class="mb-6">
      <h3 class="text-xl font-bold">Sản phẩm mới nhất</h3>
    </div>
    <div class="grid grid-cols-2 md:grid-cols-4 md:gap-6 gap-2 mt-6">
      {
        latestProducts?.items?.map((product: any) => (
          <ProductCard
            data={{
              id: product?.id,
              name: product?.name,
              price: product?.price,
              discount: product?.discount,
              slug: product?.slug,
              thumbnail: convertImageUrl(product?.expand?.thumbnail),
            }}
          >
            <Image
              slot="image"
              width={100}
              height={100}
              src={convertImageUrl(product?.expand?.thumbnail) ?? "/"}
              loading="lazy"
              alt={product?.name ?? "product_image"}
              class="aspect-square w-full bg-gray-200 object-cover group-hover:scale-105 xl:aspect-1/1 transition-all duration-300 ease-in-out"
            />
          </ProductCard>
        ))
      }
    </div>
    <div class="text-center mt-6">
      <a
        href="/"
        class="px-4 py-2 rounded-full bg-blue-500 text-white text-sm font-semibold mt-6 hover:bg-blue-600"
        >Xem thêm</a
      >
    </div>
  </section>
</Main>
