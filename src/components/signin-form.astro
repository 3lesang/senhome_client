---
import LoaderCircle from "@lucide/astro/icons/loader-circle";
---

<script>
  import { pb, USER_COLLECTION } from "@/lib/pocketbase";
  import type { AuthType } from "@/lib/type";
  import Alpine from "alpinejs";

  function signInForm(): {
    isPending: boolean;
    isSuccess: boolean;
    isError: boolean;
    email: string;
    password: string;
    submit(): void;
    $dispatch?: (event: string) => void;
  } {
    return {
      isPending: false,
      isSuccess: false,
      isError: false,
      email: "",
      password: "",
      async submit() {
        const auth = Alpine.store("auth") as AuthType;
        try {
          this.isPending = true;
          const res = await pb
            .collection(USER_COLLECTION)
            .authWithPassword(this.email, this.password);
          this.isPending = false;

          if (res.token) {
            this.isSuccess = true;
            auth.closeModal();
            const cookieValue = pb.authStore.exportToCookie().split(";")[0];
            const cookieString = `${cookieValue}; Path=/; SameSite=Lax; ${import.meta.env.PROD ? "Secure" : ""}; Max-Age=${60 * 60 * 24 * 7}`;
            document.cookie = cookieString;

            auth.user = {
              id: pb.authStore.record?.id,
              name: pb.authStore.record?.name[0],
            };
          }
        } catch (error) {
          this.isError = true;
          this.isPending = false;
        }
      },
    };
  }
  document.addEventListener("alpine:init", () => {
    Alpine.data("signInForm", () => signInForm());
  });
</script>
<form x-data="signInForm" @submit.prevent="submit">
  <div class="grid grid-cols-2 gap-4">
    <div class="col-span-2">
      <div class="flex flex-col gap-1">
        <label for="email">Email</label>
        <input
          id="email"
          x-model="email"
          type="text"
          class="border py-2 px-2 rounded"
          placeholder="Email"
        />
      </div>
    </div>
    <div class="col-span-2">
      <div class="flex flex-col gap-1">
        <label for="password">Mật khẩu</label>
        <input
          id="password"
          x-model="password"
          type="password"
          class="border py-2 px-2 rounded"
          placeholder="Mật khẩu"
        />
      </div>
    </div>

    <div class="col-span-2">
      <button
        :disabled="isPending"
        type="submit"
        class="flex justify-center gap-2 items-center bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-default text-white font-bold rounded w-full px-4 py-2 cursor-pointer"
      >
        <LoaderCircle size={16} x-show="isPending" class="animate-spin" />
        <span>Đăng nhập</span>
      </button>
    </div>
  </div>
</form>
