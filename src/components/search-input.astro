---
import ProductCard from "@/components/product/product-card.astro";
import { pb, PRODUCT_COLLECTION } from "@/lib/pocketbase";
import { convertImageUrl } from "@/lib/utils";
import SearchIcon from "@lucide/astro/icons/search";
import XIcon from "@lucide/astro/icons/x";
import { Image } from "astro:assets";

async function fetchProduct() {
  try {
    return await pb
      .collection(PRODUCT_COLLECTION)
      .getList(1, 4, { expand: "thumbnail" });
  } catch (error) {
    return null;
  }
}
const products = await fetchProduct();
---

<script>
  import { pb, PRODUCT_COLLECTION } from "@/lib/pocketbase";
  import { convertImageUrl, formatVND } from "@/lib/utils";
  import Alpine from "alpinejs";
  interface SearchType {
    open: boolean;
    query: string;
    data: any[];
    totalItems: number;
    loading: boolean;
    fetchResults(query: string): void;
  }
  Alpine.data(
    "search",
    (): SearchType => ({
      open: false,
      query: "",
      data: [],
      totalItems: 0,
      loading: false,
      async fetchResults() {
        if (!this.query.trim()) {
          this.data = [];
          return;
        }
        try {
          this.loading = true;
          const res = await pb.collection(PRODUCT_COLLECTION).getList(1, 4, {
            filter: `name ~ "${this.query}"`,
            fields: "name,slug,expand,price,discount",
            expand: "thumbnail",
          });
          this.loading = false;
          this.totalItems = res.totalItems;
          const convertData = res?.items?.map((item) => ({
            name: item?.name,
            price: formatVND(item?.price),
            discountPrice: formatVND(item?.price * (1 - item?.discount)),
            discount: item?.discount,
            thumbnail: convertImageUrl(item?.expand?.thumbnail),
            slug: `/san-pham/${item?.slug}`,
          }));
          this.data = convertData;
        } catch (error) {
          this.data = [];
          return;
        }
      },
    })
  );
</script>
<span x-data="search" x-on:keydown.esc.prevent="open = false">
  <button
    x-on:click="open = true; $nextTick(() => $refs.input.focus())"
    type="button"
    class="hidden lg:inline-flex items-center cursor-pointer px-4 py-3 border border-gray-100 hover:border-gray-200 rounded-full text-gray-500 space-x-16"
  >
    <span class="inline text-sm">Tìm kiếm sản phẩm</span>

    <SearchIcon size={16} class="inline" />
  </button>

  <div
    x-cloak
    x-show="open"
    x-on:click.away="open = false"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="transition ease-in duration-200"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    class="z-90 fixed inset-0 overflow-hidden bg-zinc-950/90 backdrop-blur-xs dark:bg-zinc-950/50"
  >
    <div
      x-cloak
      x-show="open"
      x-on:click.away="open = false"
      x-transition:enter-start="-translate-y-full"
      x-transition:leave-end="-translate-y-full"
      x-transition:enter="transition ease-out duration-200"
      x-transition:enter-end="translate-x-0 translate-y-0"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="translate-x-0 translate-y-0"
      role="document"
      class="absolute w-full will-change-transform"
    >
      <div class="flex justify-center bg-white py-4 gap-4">
        <div
          class="flex items-center gap-2 px-4 py-2 bg-gray-50 rounded-full border w-96"
        >
          <SearchIcon size={18} class="text-gray-400" />
          <input
            x-model="query"
            @keyup.enter="fetchResults"
            @input.debounce.500ms="fetchResults"
            x-ref="input"
            class="outline-0"
            placeholder="Tìm kiếm sản phẩm"
          />
        </div>
        <button class="cursor-pointer" x-on:click="open = false">
          <XIcon />
        </button>
      </div>

      <div
        x-show="!query"
        class="w-full mt-2 bg-white max-w-5xl rounded-md px-16 py-8 mx-auto"
      >
        <div>
          <p class="font-bold">Gợi ý tìm kiếm</p>
          <div class="mt-6">
            <span class="px-4 py-1.5 text-sm rounded-full border">Kệ bếp</span>
          </div>
        </div>
        <div class="mt-8">
          <p class="font-bold">Gợi ý sản phẩm</p>
          <div class="grid grid-cols-4 gap-6 mt-6">
            {
              products?.items?.map((item) => (
                <ProductCard
                  data={{
                    id: item?.id,
                    name: item?.name,
                    slug: `/san-pham/${item?.slug}`,
                  }}
                >
                  <Image
                    slot="image"
                    width={100}
                    height={100}
                    src={convertImageUrl(item?.expand?.thumbnail) ?? "/"}
                    loading="lazy"
                    alt={item?.name ?? "product_image"}
                    class="aspect-square rounded overflow-hidden w-full bg-gray-200 object-cover group-hover:scale-105 xl:aspect-1/1 transition-all duration-300 ease-in-out"
                  />
                </ProductCard>
              ))
            }
          </div>
        </div>
      </div>
      <div
        x-show="query"
        class="w-full mt-2 bg-white max-w-5xl rounded-md px-16 py-8 mx-auto"
      >
        <p class="font-semibold">Kết quả tìm kiếm</p>
        <div class="grid grid-cols-4 gap-4 mt-4" x-show="totalItems > 0">
          <template x-for="(value) in data">
            <a class="space-y-2" :href="value?.slug">
              <Image
                height={100}
                width={100}
                alt=""
                src="/"
                :src="value?.thumbnail"
                class="aspect-square w-full bg-gray-200 object-cover group-hover:scale-105 xl:aspect-1/1 transition-all duration-300 ease-in-out"
              />
              <p
                x-text="value?.name"
                class="line-clamp-2 group-hover:text-gray-600 text-sm text-gray-900"
              >
              </p>
              <span
                x-text="`-${Math.round(value?.discount * 100)}%`"
                x-show="value?.discount"
                class="px-2 py-1 rounded-md bg-blue-500 text-white text-xs font-bold"
              ></span>
              <span x-text="value?.price" class="text-lg font-bold"></span>
              <span
                x-text="value?.discountPrice"
                x-show="value?.discount"
                class="text-sm line-through text-gray-500"></span>
            </a>
          </template>
        </div>
        <div class="text-center mt-8" x-show="totalItems > 4">
          <a
            href="/"
            class="bg-blue-500 text-white py-2 px-4 text-sm rounded-full font-bold hover:bg-blue-600"
            >Xem thêm</a
          >
        </div>
        <div x-show="!loading && !totalItems">
          <p class="text-center text-sm text-gray-700">Không có sản phẩm</p>
        </div>
      </div>
    </div>
  </div>
</span>

<style>
  [x-cloak] {
    display: none;
  }
</style>
