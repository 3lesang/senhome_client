---
import type { EmblaOptionsType } from "embla-carousel";

interface Props {
  options?: EmblaOptionsType;
}

const { options } = Astro.props;
---

<script>
  import Alpine from "alpinejs";
  import EmblaCarousel, { type EmblaCarouselType } from "embla-carousel";
  import Autoplay from "embla-carousel-autoplay";

  interface CarouselData {
    embla: EmblaCarouselType | null;
    canPrev: boolean | undefined;
    canNext: boolean | undefined;
    init(): void;
    prev(): void;
    next(): void;
    destroy(): void;
  }

  Alpine.data(
    "carousel",
    (data: any): CarouselData => ({
      embla: null,
      canPrev: false,
      canNext: false,

      init() {
        const emblaNode = document.querySelector(".embla");
        const plugins = [Autoplay({ delay: 3000, stopOnInteraction: false })];
        const emblaApi = EmblaCarousel(
          emblaNode as HTMLElement,
          data?.options,
          plugins
        );

        this.embla = emblaApi;

        this.canPrev = this.embla.canScrollPrev();
        this.canNext = this.embla.canScrollNext();

        this.embla.on("select", () => {
          this.canPrev = this.embla?.canScrollPrev();
          this.canNext = this.embla?.canScrollNext();
        });
      },
      prev() {
        this.embla?.scrollPrev();
      },
      next() {
        this.embla?.scrollNext();
      },
      destroy() {
        this.embla?.destroy();
      },
    })
  );
</script>

<div class="embla relative" x-data=`carousel(${JSON.stringify({options})})`>
  <slot />
  <slot name="next" />
  <slot name="previous" />
</div>

<style>
  .embla {
    overflow: hidden;
  }
</style>
